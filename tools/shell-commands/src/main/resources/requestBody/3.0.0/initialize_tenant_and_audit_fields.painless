/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Update document ID with tenant prefix
if (ctx._id != null) {
    // Skip if already has tenant prefix
    if (!ctx._id.startsWith(params.tenantId + '_') && !ctx._id.startsWith(params.systemTenantId + '_')) {
        // For geonames or items with system scope, use system tenant
        if (ctx._index.endsWith('-geonames') || (ctx._source.scope != null && ctx._source.scope == 'system')) {
            def baseId = ctx._id;
            if (baseId.contains('_')) {
                def parts = baseId.split('_');
                baseId = parts[0];
            }
            if (ctx._index.endsWith('-systemitems')) {
                // For system items, ensure itemType is lowercase and matches the format in ElasticSearchPersistenceServiceImpl
                def itemType = ctx._source.itemType != null ? ctx._source.itemType.toLowerCase() : null;
                if (itemType != null && params.systemItems.contains(itemType)) {
                    ctx._id = ctx._source.scope == 'system' ? params.systemTenantId + '_' + baseId + '_' + itemType : params.tenantId + '_' + baseId + '_' + itemType;
                } else {
                    ctx._id = ctx._source.scope == 'system' ? params.systemTenantId + '_' + baseId : params.tenantId + '_' + baseId;
                }
            } else {
                ctx._id = params.systemTenantId + '_' + baseId;
            }
        } else {
            ctx._id = params.tenantId + '_' + ctx._id;
        }
    }
}

// Update audit fields
if (!ctx._index.endsWith('-systemitems') && !ctx._index.endsWith('-geonames')) {
    // Handle creation date based on item type
    if (ctx._source.creationDate == null) {
        if (params.itemType == 'profile' && ctx._source.properties != null) {
            if (ctx._source.properties.firstVisit != null) {
                ctx._source.creationDate = ctx._source.properties.firstVisit;
            } else {
                ctx._source.creationDate = params.date;
            }
        } else if ((params.itemType == 'event' || params.itemType == 'session') && ctx._source.timeStamp != null) {
            ctx._source.creationDate = ctx._source.timeStamp;
        } else {
            ctx._source.creationDate = params.date;
        }
    }
    
    // Handle last modification date based on item type
    if (ctx._source.lastModificationDate == null) {
        if (params.itemType == 'profile' && ctx._source.properties != null) {
            if (ctx._source.properties.lastVisit != null) {
                ctx._source.lastModificationDate = ctx._source.properties.lastVisit;
            } else {
                ctx._source.lastModificationDate = ctx._source.creationDate;
            }
        } else if (params.itemType == 'session' && ctx._source.lastEventDate != null) {
            ctx._source.lastModificationDate = ctx._source.lastEventDate;
        } else {
            ctx._source.lastModificationDate = ctx._source.creationDate;
        }
    }
    
    // Set creator fields
    if (ctx._source.createdBy == null) {
        ctx._source.createdBy = 'system-migration-3.0.0';
    }
    if (ctx._source.lastModifiedBy == null) {
        ctx._source.lastModifiedBy = 'system-migration-3.0.0';
    }
    
    // Initialize source tracking fields
    if (ctx._source.sourceInstanceId == null) {
        ctx._source.sourceInstanceId = null;
    }
    if (ctx._source.lastSyncDate == null) {
        ctx._source.lastSyncDate = null;
    }
}

// Set tenant ID in the source document based on scope for ALL items
if (ctx._source.tenantId == null) {
    if (ctx._index.endsWith('-geonames') || (ctx._source.scope != null && ctx._source.scope == 'system')) {
        ctx._source.tenantId = params.systemTenantId;
    } else {
        ctx._source.tenantId = params.tenantId;
    }
} 