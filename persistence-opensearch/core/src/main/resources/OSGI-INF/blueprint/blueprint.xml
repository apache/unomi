<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<blueprint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd





  http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd">

    <cm:property-placeholder persistent-id="org.apache.unomi.persistence.opensearch"
                             update-strategy="none" placeholder-prefix="${os.">
        <cm:default-properties>
            <cm:property name="cluster.name" value="opensearch-cluster"/>
            <cm:property name="openSearchAddresses" value="localhost:9200"/>
            <cm:property name="index.prefix" value="context"/>
            <cm:property name="numberOfShards" value="5"/>
            <cm:property name="numberOfReplicas" value="0"/>
            <cm:property name="indexMappingTotalFieldsLimit" value="1000"/>
            <cm:property name="indexMaxDocValueFieldsSearch" value="1000"/>
            <cm:property name="monthlyIndex.numberOfShards" value="3"/>
            <cm:property name="monthlyIndex.numberOfReplicas" value="0"/>
            <cm:property name="monthlyIndex.indexMappingTotalFieldsLimit" value="1000"/>
            <cm:property name="monthlyIndex.indexMaxDocValueFieldsSearch" value="1000"/>
            <cm:property name="monthlyIndex.itemsMonthlyIndexedOverride" value="event,session"/>
            <cm:property name="defaultQueryLimit" value="10"/>

            <cm:property name="bulkProcessor.concurrentRequests" value="1" />
            <cm:property name="bulkProcessor.bulkActions" value="1000" />
            <cm:property name="bulkProcessor.bulkSize" value="5MB" />
            <cm:property name="bulkProcessor.flushInterval" value="5s" />
            <cm:property name="bulkProcessor.backoffPolicy" value="exponential" />

            <cm:property name="rollover.indices" value="" />
            <cm:property name="rollover.maxSize" value="30gb" />
            <cm:property name="rollover.maxAge" value="" />
            <cm:property name="rollover.maxDocs" value="" />
            <cm:property name="rollover.numberOfShards" value=""/>
            <cm:property name="rollover.numberOfReplicas" value=""/>
            <cm:property name="rollover.indexMappingTotalFieldsLimit" value=""/>
            <cm:property name="rollover.indexMaxDocValueFieldsSearch" value=""/>

            <cm:property name="minimalOpenSearchVersion" value="2.1.0" />
            <cm:property name="maximalOpenSearchVersion" value="3.0.0" />

            <cm:property name="aggregateQueryBucketSize" value="5000" />
            <cm:property name="clientSocketTimeout" value="-1" />
            <cm:property name="taskWaitingTimeout" value="3600000" />
            <cm:property name="taskWaitingPollingInterval" value="1000" />
            <cm:property name="aggQueryMaxResponseSizeHttp" value="" />
            <cm:property name="aggQueryThrowOnMissingDocs" value="false" />
            <cm:property name="itemTypeToRefreshPolicy" value="" />
            <cm:property name="useBatchingForSave" value="false" />
            <cm:property name="useBatchingForUpdate" value="true" />

            <cm:property name="username" value="admin" />
            <cm:property name="password" value="" />
            <cm:property name="sslEnable" value="true" />
            <cm:property name="sslTrustAllCertificates" value="true" />
            <cm:property name="throwExceptions" value="false" />
            <cm:property name="alwaysOverwrite" value="true" />
            <cm:property name="errorLogLevelRestClient" value="true" />

            <cm:property name="minimalClusterState" value="GREEN" />

        </cm:default-properties>
    </cm:property-placeholder>

    <reference id="metricsService" interface="org.apache.unomi.metrics.MetricsService" />
    <reference id="scriptExecutor" interface="org.apache.unomi.scripting.ScriptExecutor" />

    <service id="openSearchPersistenceService" ref="openSearchPersistenceServiceImpl">
        <interfaces>
            <value>org.apache.unomi.persistence.spi.PersistenceService</value>
            <value>org.osgi.framework.SynchronousBundleListener</value>
            <value>org.osgi.service.cm.ManagedService</value>
        </interfaces>
        <service-properties>
            <entry key="service.pid" value="org.apache.unomi.persistence.opensearch"/>
        </service-properties>
    </service>

    <bean id="conditionOSQueryBuilderDispatcher"
          class="org.apache.unomi.persistence.opensearch.ConditionOSQueryBuilderDispatcher">
        <property name="scriptExecutor" ref="scriptExecutor" />
    </bean>

    <reference id="conditionEvaluatorDispatcher" interface="org.apache.unomi.persistence.spi.conditions.ConditionEvaluatorDispatcher" />

    <bean id="openSearchPersistenceServiceImpl"
          class="org.apache.unomi.persistence.opensearch.OpenSearchPersistenceServiceImpl"
          init-method="start"
          destroy-method="stop">
        <property name="bundleContext" ref="blueprintBundleContext"/>
        <property name="conditionEvaluatorDispatcher" ref="conditionEvaluatorDispatcher"/>
        <property name="conditionOSQueryBuilderDispatcher" ref="conditionOSQueryBuilderDispatcher"/>
        <property name="clusterName" value="${os.cluster.name}"/>
        <property name="indexPrefix" value="${os.index.prefix}"/>
        <property name="monthlyIndexNumberOfShards" value="${os.monthlyIndex.numberOfShards}"/>
        <property name="monthlyIndexNumberOfReplicas" value="${os.monthlyIndex.numberOfReplicas}"/>
        <property name="monthlyIndexMappingTotalFieldsLimit" value="${os.monthlyIndex.indexMappingTotalFieldsLimit}"/>
        <property name="monthlyIndexMaxDocValueFieldsSearch" value="${os.monthlyIndex.indexMaxDocValueFieldsSearch}"/>
        <property name="numberOfShards" value="${os.numberOfShards}"/>
        <property name="numberOfReplicas" value="${os.numberOfReplicas}"/>
        <property name="indexMappingTotalFieldsLimit" value="${os.indexMappingTotalFieldsLimit}"/>
        <property name="indexMaxDocValueFieldsSearch" value="${os.indexMaxDocValueFieldsSearch}"/>
        <property name="openSearchAddresses" value="${os.openSearchAddresses}"/>
        <property name="fatalIllegalStateErrors" value="${os.fatalIllegalStateErrors}"/>
        <property name="defaultQueryLimit" value="${os.defaultQueryLimit}"/>
        <property name="itemsMonthlyIndexedOverride" value="${os.monthlyIndex.itemsMonthlyIndexedOverride}" />
        <property name="routingByType">
            <map>
            </map>
        </property>

        <property name="rolloverIndices" value="${os.rollover.indices}" />
        <property name="rolloverMaxSize" value="${os.rollover.maxSize}" />
        <property name="rolloverMaxAge" value="${os.rollover.maxAge}" />
        <property name="rolloverMaxDocs" value="${os.rollover.maxDocs}" />
        <property name="rolloverIndexNumberOfShards" value="${os.rollover.numberOfShards}"/>
        <property name="rolloverIndexNumberOfReplicas" value="${os.rollover.numberOfReplicas}"/>
        <property name="rolloverIndexMappingTotalFieldsLimit" value="${os.rollover.indexMappingTotalFieldsLimit}"/>
        <property name="rolloverIndexMaxDocValueFieldsSearch" value="${os.rollover.indexMaxDocValueFieldsSearch}"/>

        <property name="minimalOpenSearchVersion" value="${os.minimalOpenSearchVersion}" />
        <property name="maximalOpenSearchVersion" value="${os.maximalOpenSearchVersion}" />

        <property name="aggregateQueryBucketSize" value="${os.aggregateQueryBucketSize}" />
        <property name="aggQueryMaxResponseSizeHttp" value="${os.aggQueryMaxResponseSizeHttp}" />
        <property name="aggQueryThrowOnMissingDocs" value="${os.aggQueryThrowOnMissingDocs}" />
        <property name="itemTypeToRefreshPolicy" value="${os.itemTypeToRefreshPolicy}" />

        <property name="clientSocketTimeout" value="${os.clientSocketTimeout}" />
        <property name="taskWaitingTimeout" value="${os.taskWaitingTimeout}" />
        <property name="taskWaitingPollingInterval" value="${os.taskWaitingPollingInterval}" />

        <property name="metricsService" ref="metricsService" />
        <property name="useBatchingForSave" value="${os.useBatchingForSave}" />
        <property name="useBatchingForUpdate" value="${os.useBatchingForUpdate}" />

        <property name="username" value="${os.username}" />
        <property name="password" value="${os.password}" />
        <property name="sslEnable" value="${os.sslEnable}" />
        <property name="sslTrustAllCertificates" value="${os.sslTrustAllCertificates}" />
        <property name="throwExceptions" value="${os.throwExceptions}" />
        <property name="alwaysOverwrite" value="${os.alwaysOverwrite}" />
        <property name="logLevelRestClient" value="${os.logLevelRestClient}" />
        <property name="minimalClusterState" value="${os.minimalClusterState}" />
        <property name="contextManager" ref="contextManager"/>
    </bean>

    <!-- We use a listener here because using the list directly for listening to proxies coming from the same bundle didn't seem to work -->
    <reference-list id="conditionOSQueryBuilders"
                    interface="org.apache.unomi.persistence.opensearch.ConditionOSQueryBuilder"
                    availability="optional">
        <reference-listener
                bind-method="bindConditionOSQueryBuilder" unbind-method="unbindConditionOSQueryBuilder" ref="openSearchPersistenceServiceImpl"/>
    </reference-list>

    <!-- Transformation Listeners -->
    <reference-list id="transformationListeners"
                   interface="org.apache.unomi.api.tenants.TenantTransformationListener"
                   availability="optional">
        <reference-listener bind-method="bindTransformationListener"
                          unbind-method="unbindTransformationListener">
            <ref component-id="openSearchPersistenceServiceImpl"/>
        </reference-listener>
    </reference-list>

    <!-- Security Service Reference -->
    <reference id="securityService"
               interface="org.apache.unomi.api.security.SecurityService"
               availability="optional">
        <reference-listener bind-method="bindSecurityService"
                          unbind-method="unbindSecurityService">
            <ref component-id="openSearchPersistenceServiceImpl"/>
        </reference-listener>
    </reference>

    <!-- Context Manager Reference -->
    <reference id="contextManager"
               interface="org.apache.unomi.api.services.ExecutionContextManager"/>

    <service
            interface="org.apache.unomi.persistence.opensearch.ConditionOSQueryBuilder">
        <service-properties>
            <entry key="queryBuilderId" value="booleanConditionESQueryBuilder"/>
        </service-properties>
        <bean class="org.apache.unomi.persistence.opensearch.querybuilders.core.BooleanConditionOSQueryBuilder"/>
    </service>

    <service
            interface="org.apache.unomi.persistence.opensearch.ConditionOSQueryBuilder">
        <service-properties>
            <entry key="queryBuilderId" value="notConditionESQueryBuilder"/>
        </service-properties>
        <bean class="org.apache.unomi.persistence.opensearch.querybuilders.core.NotConditionOSQueryBuilder"/>
    </service>

    <service
            interface="org.apache.unomi.persistence.opensearch.ConditionOSQueryBuilder">
        <service-properties>
            <entry key="queryBuilderId" value="matchAllConditionESQueryBuilder"/>
        </service-properties>
        <bean class="org.apache.unomi.persistence.opensearch.querybuilders.core.MatchAllConditionOSQueryBuilder"/>
    </service>

    <service
            interface="org.apache.unomi.persistence.opensearch.ConditionOSQueryBuilder">
        <service-properties>
            <entry key="queryBuilderId" value="propertyConditionESQueryBuilder"/>
        </service-properties>
        <bean class="org.apache.unomi.persistence.opensearch.querybuilders.core.PropertyConditionOSQueryBuilder"/>
    </service>

    <service
            interface="org.apache.unomi.persistence.opensearch.ConditionOSQueryBuilder">
        <service-properties>
            <entry key="queryBuilderId" value="sourceEventPropertyConditionESQueryBuilder"/>
        </service-properties>
        <bean class="org.apache.unomi.persistence.opensearch.querybuilders.core.SourceEventPropertyConditionOSQueryBuilder"/>
    </service>

    <service
            interface="org.apache.unomi.persistence.opensearch.ConditionOSQueryBuilder">
        <service-properties>
            <entry key="queryBuilderId" value="nestedConditionESQueryBuilder"/>
        </service-properties>
        <bean class="org.apache.unomi.persistence.opensearch.querybuilders.core.NestedConditionOSQueryBuilder"/>
    </service>

</blueprint>
