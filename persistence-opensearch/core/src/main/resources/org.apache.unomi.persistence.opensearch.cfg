#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

cluster.name=${org.apache.unomi.opensearch.cluster.name:-opensearch-cluster}
# The openSearchAddresses may be a comma seperated list of host names and ports such as
# hostA:9200,hostB:9200
# Note: the port number must be repeated for each host.
openSearchAddresses=${org.apache.unomi.opensearch.addresses:-localhost:9200}
fatalIllegalStateErrors=${org.apache.unomi.opensearch.fatalIllegalStateErrors:-}
index.prefix=${org.apache.unomi.opensearch.index.prefix:-context}

# Deprecated properties. Please use rollover corresponding properties
monthlyIndex.numberOfShards=${org.apache.unomi.opensearch.monthlyIndex.nbShards:-5}
monthlyIndex.numberOfReplicas=${org.apache.unomi.opensearch.monthlyIndex.nbReplicas:-0}
monthlyIndex.indexMappingTotalFieldsLimit=${org.apache.unomi.opensearch.monthlyIndex.indexMappingTotalFieldsLimit:-1000}
monthlyIndex.indexMaxDocValueFieldsSearch=${org.apache.unomi.opensearch.monthlyIndex.indexMaxDocValueFieldsSearch:-1000}
monthlyIndex.itemsMonthlyIndexedOverride=${org.apache.unomi.opensearch.monthlyIndex.itemsMonthlyIndexedOverride:-event,session}
# New properties for index rotation:
rollover.numberOfShards=${org.apache.unomi.opensearch.rollover.nbShards}
rollover.numberOfReplicas=${org.apache.unomi.opensearch.rollover.nbReplicas}
rollover.indexMappingTotalFieldsLimit=${org.apache.unomi.opensearch.rollover.indexMappingTotalFieldsLimit}
rollover.indexMaxDocValueFieldsSearch=${org.apache.unomi.opensearch.rollover.indexMaxDocValueFieldsSearch}
rollover.indices=${org.apache.unomi.opensearch.rollover.indices}

numberOfShards=${org.apache.unomi.opensearch.defaultIndex.nbShards:-5}
numberOfReplicas=${org.apache.unomi.opensearch.defaultIndex.nbReplicas:-0}
indexMappingTotalFieldsLimit=${org.apache.unomi.opensearch.defaultIndex.indexMappingTotalFieldsLimit:-1000}
indexMaxDocValueFieldsSearch=${org.apache.unomi.opensearch.defaultIndex.indexMaxDocValueFieldsSearch:-1000}
defaultQueryLimit=${org.apache.unomi.opensearch.defaultQueryLimit:-10}

# Rollover amd index configuration for event and session indices, values are cumulative
# See https://www.elastic.co/guide/en/opensearch/reference/7.17/ilm-rollover.html for option details.
rollover.maxSize=${org.apache.unomi.opensearch.rollover.maxSize:-30gb}
rollover.maxAge=${org.apache.unomi.opensearch.rollover.maxAge}
rollover.maxDocs=${org.apache.unomi.opensearch.rollover.maxDocs}

# The following settings control the behavior of the BulkProcessor API. You can find more information about these
# settings and their behavior here : https://www.elastic.co/guide/en/opensearch/client/java-api/2.4/java-docs-bulk-processor.html
# The values used here are the default values of the API
bulkProcessor.concurrentRequests=${org.apache.unomi.opensearch.bulkProcessor.concurrentRequests:-1}
bulkProcessor.bulkActions=${org.apache.unomi.opensearch.bulkProcessor.bulkActions:-1000}
bulkProcessor.bulkSize=${org.apache.unomi.opensearch.bulkProcessor.bulkSize:-5MB}
bulkProcessor.flushInterval=${org.apache.unomi.opensearch.bulkProcessor.flushInterval:-5s}
bulkProcessor.backoffPolicy=${org.apache.unomi.opensearch.bulkProcessor.backoffPolicy:-exponential}

# The following settings are used to perform version checks on the connected OpenSearch cluster, to make sure that
# appropriate versions are used. The check is performed like this :
# for each node in the OpenSearch cluster:
#   minimalOpenSearchVersion <= OpenSearch node version < maximalOpenSearchVersion
minimalOpenSearchVersion=2.0.0
maximalOpenSearchVersion=3.0.0

# The following setting is used to set the aggregate query bucket size
aggregateQueryBucketSize=${org.apache.unomi.opensearch.aggregateQueryBucketSize:-5000}

# Maximum size allowed for an elastic "ids" query
maximumIdsQueryCount=${org.apache.unomi.opensearch.maximumIdsQueryCount:-5000}

# Disable partitions on aggregation queries for past events.
pastEventsDisablePartitions=${org.apache.unomi.opensearch.pastEventsDisablePartitions:-false}

# Defines the socket timeout (SO_TIMEOUT) in milliseconds, which is the timeout for waiting for data or, put differently, a maximum period inactivity between two consecutive data packets).
# A timeout value of zero is interpreted as an infinite timeout. A negative value is interpreted as undefined (system default).
# Default: -1
clientSocketTimeout=${org.apache.unomi.opensearch.clientSocketTimeout:--1}

# Defines the waiting for task completion timeout in milliseconds.
# Some operations like update_by_query and delete_by_query are delegated to OpenSearch using tasks
# For consistency the thread that trigger one of those operations will wait for the task to be completed on OpenSearch side.
# This timeout configuration is here to ensure not blocking the thread infinitely, in case of very long running tasks.
# A timeout value of zero or negative is interpreted as an infinite timeout.
# Default: 3600000 (1 hour)
taskWaitingTimeout=${org.apache.unomi.opensearch.taskWaitingTimeout:-3600000}

# Defines the polling interval in milliseconds, which is used to check if task is completed on OpenSearch side
# Default: 1000 (1 second)
taskWaitingPollingInterval=${org.apache.unomi.opensearch.taskWaitingPollingInterval:-1000}

# refresh policy per item type in Json.
# Valid values are WAIT_UNTIL/IMMEDIATE/NONE. The default refresh policy is NONE.
# Example: "{"event":"WAIT_UNTIL","rule":"NONE"}
itemTypeToRefreshPolicy=${org.apache.unomi.opensearch.itemTypeToRefreshPolicy:-}

# Retrun error in docs are missing in es aggregation calculation
aggQueryThrowOnMissingDocs=${org.apache.unomi.opensearch.aggQueryThrowOnMissingDocs:-false}

aggQueryMaxResponseSizeHttp=${org.apache.unomi.opensearch.aggQueryMaxResponseSizeHttp:-}

# Authentication
username=${org.apache.unomi.opensearch.username:-}
password=${org.apache.unomi.opensearch.password:-}
sslEnable=${org.apache.unomi.opensearch.sslEnable:-true}
sslTrustAllCertificates=${org.apache.unomi.opensearch.sslTrustAllCertificates:-true}

# Errors
throwExceptions=${org.apache.unomi.opensearch.throwExceptions:-false}

alwaysOverwrite=${org.apache.unomi.opensearch.alwaysOverwrite:-true}
useBatchingForUpdate=${org.apache.unomi.opensearch.useBatchingForUpdate:-true}

# ES logging
logLevelRestClient=${org.apache.unomi.opensearch.logLevelRestClient:-ERROR}

minimalClusterState=${org.apache.unomi.opensearch.minimalClusterState:-GREEN}
