<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<blueprint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
           http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd">

    <!-- References -->
    <reference id="persistenceService"
               interface="org.apache.unomi.persistence.spi.PersistenceService"/>
    <reference id="httpService" interface="org.osgi.service.http.HttpService"/>
    <reference id="osgiConfigurationAdmin" interface="org.osgi.service.cm.ConfigurationAdmin"/>
    <reference id="metricsService" interface="org.apache.unomi.metrics.MetricsService"/>
    <reference id="scriptExecutor" interface="org.apache.unomi.scripting.ScriptExecutor"/>
    <reference id="configAdmin" interface="org.osgi.service.cm.ConfigurationAdmin"/>
    <reference id="tracerService" interface="org.apache.unomi.tracing.api.TracerService"/>
    <reference id="encryptionService" interface="org.apache.unomi.api.security.EncryptionService" availability="optional">
        <reference-listener ref="securityServiceImpl"
                           bind-method="bindEncryptionService"
                           unbind-method="unbindEncryptionService"/>
    </reference>

    <!-- Reference Lists -->
    <reference-list id="eventListenerServices"
                    interface="org.apache.unomi.api.services.EventListenerService"
                    availability="optional">
        <reference-listener
                bind-method="bind" unbind-method="unbind" ref="eventServiceImpl"/>
    </reference-list>

    <reference-list id="ruleListenerServices"
                    interface="org.apache.unomi.api.services.RuleListenerService"
                    availability="optional">
        <reference-listener
                bind-method="bind" unbind-method="unbind" ref="rulesServiceImpl"/>
    </reference-list>

    <reference-list id="actionExecutors"
                    interface="org.apache.unomi.api.actions.ActionExecutor"
                    availability="optional">
        <reference-listener
                bind-method="bindExecutor" unbind-method="unbindExecutor" ref="actionExecutorDispatcherImpl"/>
    </reference-list>

    <reference-list id="actionDispatchers"
                    interface="org.apache.unomi.api.actions.ActionDispatcher"
                    availability="optional">
        <reference-listener
                bind-method="bindDispatcher" unbind-method="unbindDispatcher" ref="actionExecutorDispatcherImpl"/>
    </reference-list>

    <reference-list id="personalizationStrategies"
                    interface="org.apache.unomi.api.PersonalizationStrategy"
                    availability="optional">
        <reference-listener
                bind-method="addPersonalizationStrategy" unbind-method="removePersonalizationStrategy"
                ref="personalizationServiceImpl"/>
    </reference-list>

    <reference-list id="tenantLifecycleListeners"
                    interface="org.apache.unomi.api.services.TenantLifecycleListener"
                    availability="optional">
        <reference-listener ref="tenantServiceImpl"
                           bind-method="bindListener"
                           unbind-method="unbindListener"/>
    </reference-list>

    <!-- Reference list for custom validators from plugins -->
    <reference-list id="customValidators"
                   interface="org.apache.unomi.api.services.ValueTypeValidator"
                   availability="optional">
        <reference-listener bind-method="bindValidator"
                          unbind-method="unbindValidator"
                          ref="conditionValidationService"/>
    </reference-list>

    <!-- Configuration -->
    <cm:property-placeholder persistent-id="org.apache.unomi.services"
                             update-strategy="reload" placeholder-prefix="${services.">
        <cm:default-properties>
            <cm:property name="profile.purge.interval" value="1"/>
            <cm:property name="profile.purge.inactiveTime" value="180"/>
            <cm:property name="profile.purge.existTime" value="-1"/>
            <cm:property name="monthly.index.purge.existTime" value="12"/>
            <cm:property name="session.purge.existTime" value="-1"/>
            <cm:property name="event.purge.existTime" value="-1"/>
            <cm:property name="segment.update.batchSize" value="1000"/>
            <cm:property name="profile.forceRefreshOnSave" value="false"/>
            <cm:property name="definitions.refresh.interval" value="10000"/>
            <cm:property name="properties.refresh.interval" value="10000"/>
            <cm:property name="segment.refresh.interval" value="1000"/>
            <cm:property name="segment.max.retries.update.profile.segment" value="5"/>
            <cm:property name="segment.retry.update.segment.seconds.delay" value="1"/>
            <cm:property name="segment.recalculate.period" value="1"/>
            <cm:property name="segment.batch.update" value="false"/>
            <cm:property name="segment.send.profile.update.event" value="true"/>
            <cm:property name="segment.daily.dateexpr.evaluation.hourutc" value="5"/>
            <cm:property name="rules.refresh.interval" value="1000"/>
            <cm:property name="rules.statistics.refresh.interval" value="10000"/>
            <cm:property name="rules.optimizationActivated" value="true"/>
            <cm:property name="scheduler.thread.poolSize" value="5"/>
            <cm:property name="scheduler.executorNode" value="true" />
            <cm:property name="scheduler.completedTaskTtlDays" value="30" />
            <cm:property name="scopes.refresh.interval" value="1000"/>
        </cm:default-properties>
    </cm:property-placeholder>

    <cm:property-placeholder persistent-id="org.apache.unomi.cluster"
                             update-strategy="reload" placeholder-prefix="${cluster.">
        <cm:default-properties>
            <cm:property name="group" value="default"/>
            <cm:property name="contextserver.publicAddress" value="https://localhost:9443"/>
            <cm:property name="contextserver.internalAddress" value="http://127.0.0.1:8181"/>
            <cm:property name="nodeStatisticsUpdateFrequency" value="10000"/>
        </cm:default-properties>
    </cm:property-placeholder>

    <cm:property-placeholder persistent-id="org.apache.unomi.persistence.elasticsearch"
                             update-strategy="reload" placeholder-prefix="${es.">
        <cm:default-properties>
            <cm:property name="aggregateQueryBucketSize" value="5000"/>
        </cm:default-properties>
    </cm:property-placeholder>

    <cm:property-placeholder persistent-id="org.apache.unomi.security" update-strategy="reload" placeholder-prefix="${security.">
        <cm:default-properties>
            <cm:property name="systemRoles" value="ROLE_UNOMI_SYSTEM,ROLE_UNOMI_ADMIN"/>
            <cm:property name="defaultRole" value="ROLE_UNOMI_TENANT_USER"/>
            <cm:property name="permissionRoles" value="ROLE_UNOMI_SYSTEM,ROLE_UNOMI_ADMIN,ROLE_UNOMI_TENANT_USER,ROLE_UNOMI_TENANT_ADMIN,ROLE_SYSTEM_MAINTENANCE"/>
            <cm:property name="enableEncryption" value="false"/>
        </cm:default-properties>
    </cm:property-placeholder>

    <!-- Beans -->
    <bean id="multiTypeCacheServiceImpl" class="org.apache.unomi.services.impl.cache.MultiTypeCacheServiceImpl" />

    <bean id="securityServiceConfiguration" class="org.apache.unomi.api.security.SecurityServiceConfiguration">
        <property name="systemRoles">
            <set>
                <value>ROLE_UNOMI_SYSTEM</value>
                <value>ROLE_UNOMI_ADMIN</value>
                <value>ROLE_UNOMI_TENANT_ADMIN</value>
                <value>ROLE_SYSTEM_MAINTENANCE</value>
            </set>
        </property>
        <property name="enableEncryption" value="${security.enableEncryption}"/>
    </bean>

    <bean id="auditServiceImpl" class="org.apache.unomi.services.impl.tenants.AuditServiceImpl">
        <property name="persistenceService" ref="persistenceService"/>
    </bean>

    <bean id="securityServiceImpl" class="org.apache.unomi.services.impl.KarafSecurityService"
          init-method="init" destroy-method="destroy">
        <property name="configuration" ref="securityServiceConfiguration"/>
        <property name="tenantAuditService" ref="auditServiceImpl"/>
    </bean>

    <bean id="executionContextManagerImpl" class="org.apache.unomi.services.impl.ExecutionContextManagerImpl">
        <property name="securityService" ref="securityServiceImpl"/>
    </bean>

    <bean id="schedulerServiceImpl" class="org.apache.unomi.services.impl.scheduler.SchedulerServiceImpl"
          init-method="postConstruct" destroy-method="preDestroy">
        <property name="threadPoolSize" value="${services.scheduler.thread.poolSize}"/>
        <property name="persistenceService" ref="persistenceService"/>
        <property name="executorNode" value="${services.scheduler.executorNode}"/>
        <property name="completedTaskTtlDays" value="${services.scheduler.completedTaskTtlDays}"/>
    </bean>

    <bean id="definitionsServiceImpl" class="org.apache.unomi.services.impl.definitions.DefinitionsServiceImpl"
          init-method="postConstruct" destroy-method="preDestroy" depends-on="conditionValidationService">
        <property name="persistenceService" ref="persistenceService"/>
        <property name="bundleContext" ref="blueprintBundleContext"/>
        <property name="schedulerService" ref="schedulerServiceImpl"/>
        <property name="definitionsRefreshInterval" value="${services.definitions.refresh.interval}"/>
        <property name="tenantService" ref="tenantServiceImpl"/>
        <property name="cacheService" ref="multiTypeCacheServiceImpl"/>
        <property name="contextManager" ref="executionContextManagerImpl"/>
        <property name="conditionValidationService" ref="conditionValidationService"/>
        <property name="tracerService" ref="tracerService"/>
    </bean>

    <bean id="eventServiceImpl" class="org.apache.unomi.services.impl.events.EventServiceImpl">
        <property name="persistenceService" ref="persistenceService"/>
        <property name="definitionsService" ref="definitionsServiceImpl"/>
        <property name="bundleContext" ref="blueprintBundleContext"/>
        <property name="tracerService" ref="tracerService" />
        <property name="predefinedEventTypeIds">
            <set>
                <value>view</value>
                <value>login</value>
                <value>sessionCreated</value>
                <value>facebookLogin</value>
                <value>profileUpdated</value>
            </set>
        </property>
        <property name="restrictedEventTypeIds">
            <set>
                <value>sessionCreated</value>
                <value>sessionReassigned</value>
                <value>profileUpdated</value>
                <value>ruleFired</value>
                <value>updateProperties</value>
            </set>
        </property>
        <property name="tenantService" ref="tenantServiceImpl" />
    </bean>

    <bean id="goalsServiceImpl" class="org.apache.unomi.services.impl.goals.GoalsServiceImpl"
          init-method="postConstruct" destroy-method="preDestroy" depends-on="conditionValidationService">
        <property name="persistenceService" ref="persistenceService"/>
        <property name="definitionsService" ref="definitionsServiceImpl"/>
        <property name="rulesService" ref="rulesServiceImpl"/>
        <property name="bundleContext" ref="blueprintBundleContext"/>
        <property name="tenantService" ref="tenantServiceImpl"/>
        <property name="contextManager" ref="executionContextManagerImpl"/>
        <property name="conditionValidationService" ref="conditionValidationService"/>
        <property name="tracerService" ref="tracerService"/>
    </bean>

    <bean id="scopeServiceImpl" class="org.apache.unomi.services.impl.scope.ScopeServiceImpl"
          init-method="postConstruct" destroy-method="preDestroy">
        <property name="persistenceService" ref="persistenceService"/>
        <property name="schedulerService" ref="schedulerServiceImpl"/>
        <property name="scopesRefreshInterval" value="${services.scopes.refresh.interval}"/>
        <property name="tenantService" ref="tenantServiceImpl"/>
        <property name="contextManager" ref="executionContextManagerImpl"/>
    </bean>

    <bean id="actionExecutorDispatcherImpl"
          class="org.apache.unomi.services.actions.impl.ActionExecutorDispatcherImpl">
        <property name="metricsService" ref="metricsService"/>
        <property name="scriptExecutor" ref="scriptExecutor"/>
        <property name="bundleContext" ref="blueprintBundleContext"/>
    </bean>

    <bean id="rulesServiceImpl" class="org.apache.unomi.services.impl.rules.RulesServiceImpl"
          init-method="postConstruct" destroy-method="preDestroy" depends-on="conditionValidationService">
        <property name="persistenceService" ref="persistenceService"/>
        <property name="definitionsService" ref="definitionsServiceImpl"/>
        <property name="eventService" ref="eventServiceImpl"/>
        <property name="actionExecutorDispatcher" ref="actionExecutorDispatcherImpl"/>
        <property name="bundleContext" ref="blueprintBundleContext"/>
        <property name="schedulerService" ref="schedulerServiceImpl"/>
        <property name="rulesRefreshInterval" value="${services.rules.refresh.interval}"/>
        <property name="rulesStatisticsRefreshInterval" value="${services.rules.statistics.refresh.interval}"/>
        <property name="optimizedRulesActivated" value="${services.rules.optimizationActivated}"/>
        <property name="tenantService" ref="tenantServiceImpl"/>
        <property name="contextManager" ref="executionContextManagerImpl"/>
        <property name="conditionValidationService" ref="conditionValidationService"/>
        <property name="tracerService" ref="tracerService"/>
    </bean>

    <bean id="segmentServiceImpl" class="org.apache.unomi.services.impl.segments.SegmentServiceImpl"
          init-method="postConstruct" destroy-method="preDestroy" depends-on="conditionValidationService">
        <property name="persistenceService" ref="persistenceService"/>
        <property name="definitionsService" ref="definitionsServiceImpl"/>
        <property name="eventService" ref="eventServiceImpl"/>
        <property name="rulesService" ref="rulesServiceImpl"/>
        <property name="bundleContext" ref="blueprintBundleContext"/>
        <property name="taskExecutionPeriod" value="${services.segment.recalculate.period}"/>
        <property name="segmentUpdateBatchSize" value="${services.segment.update.batchSize}"/>
        <property name="schedulerService" ref="schedulerServiceImpl"/>
        <property name="segmentRefreshInterval" value="${services.segment.refresh.interval}"/>
        <property name="aggregateQueryBucketSize" value="${es.aggregateQueryBucketSize}"/>
        <property name="pastEventsDisablePartitions" value="${es.pastEventsDisablePartitions}"/>
        <property name="maximumIdsQueryCount" value="${es.maximumIdsQueryCount}"/>
        <property name="maxRetriesForUpdateProfileSegment" value="${services.segment.max.retries.update.profile.segment}"/>
        <property name="secondsDelayForRetryUpdateProfileSegment" value="${services.segment.retry.update.segment.seconds.delay}"/>
        <property name="batchSegmentProfileUpdate" value="${services.segment.batch.update}"/>
        <property name="sendProfileUpdateEventForSegmentUpdate" value="${services.segment.send.profile.update.event}"/>
        <property name="dailyDateExprEvaluationHourUtc" value="${services.segment.daily.dateexpr.evaluation.hourutc}"/>
        <property name="tenantService" ref="tenantServiceImpl"/>
        <property name="contextManager" ref="executionContextManagerImpl"/>
        <property name="cacheService" ref="multiTypeCacheServiceImpl"/>
        <property name="conditionValidationService" ref="conditionValidationService"/>
        <property name="tracerService" ref="tracerService"/>
    </bean>

    <bean id="userListServiceImpl" class="org.apache.unomi.services.impl.lists.UserListServiceImpl"
          init-method="postConstruct" destroy-method="preDestroy">
        <property name="persistenceService" ref="persistenceService"/>
        <property name="definitionsService" ref="definitionsServiceImpl"/>
        <property name="bundleContext" ref="blueprintBundleContext"/>
    </bean>

    <bean id="profileServiceImpl" class="org.apache.unomi.services.impl.profiles.ProfileServiceImpl"
          init-method="postConstruct" destroy-method="preDestroy">
        <property name="persistenceService" ref="persistenceService"/>
        <property name="definitionsService" ref="definitionsServiceImpl"/>
        <property name="segmentService" ref="segmentServiceImpl"/>
        <property name="bundleContext" ref="blueprintBundleContext"/>
        <property name="purgeProfileInterval" value="${services.profile.purge.interval}"/>
        <property name="purgeProfileInactiveTime" value="${services.profile.purge.inactiveTime}"/>
        <property name="purgeProfileExistTime" value="${services.profile.purge.existTime}"/>
        <property name="purgeSessionsAndEventsTime" value="${services.monthly.index.purge.existTime}"/>
        <property name="purgeSessionExistTime" value="${services.session.purge.existTime}"/>
        <property name="purgeEventExistTime" value="${services.event.purge.existTime}"/>
        <property name="schedulerService" ref="schedulerServiceImpl"/>
        <property name="forceRefreshOnSave" value="${services.profile.forceRefreshOnSave}"/>
        <property name="propertiesRefreshInterval" value="${services.properties.refresh.interval}"/>
        <property name="contextManager" ref="executionContextManagerImpl"/>
    </bean>

    <bean id="queryServiceImpl" class="org.apache.unomi.services.impl.queries.QueryServiceImpl"
          init-method="postConstruct" destroy-method="preDestroy">
        <property name="persistenceService" ref="persistenceService"/>
        <property name="definitionsService" ref="definitionsServiceImpl"/>
    </bean>

    <bean id="personalizationServiceImpl"
          class="org.apache.unomi.services.impl.personalization.PersonalizationServiceImpl">
        <property name="profileService" ref="profileServiceImpl"/>
        <property name="bundleContext" ref="blueprintBundleContext"/>
    </bean>

    <bean id="patchServiceImpl" class="org.apache.unomi.services.impl.patches.PatchServiceImpl"
          init-method="postConstruct" destroy-method="preDestroy">
        <property name="persistenceService" ref="persistenceService"/>
        <property name="bundleContext" ref="blueprintBundleContext"/>
        <property name="contextManager" ref="executionContextManagerImpl"/>
    </bean>

    <bean id="topicServiceImpl" class="org.apache.unomi.services.impl.topics.TopicServiceImpl"
          init-method="postConstruct" destroy-method="preDestroy">
        <property name="persistenceService" ref="persistenceService"/>
        <property name="bundleContext" ref="blueprintBundleContext"/>
    </bean>

    <bean id="configSharingServiceImpl" class="org.apache.unomi.services.impl.configsharing.ConfigSharingServiceImpl"
          destroy-method="preDestroy">
        <property name="configProperties">
            <map>
                <entry key="internalServerAddress" value="${cluster.contextserver.internalAddress}"/>
            </map>
        </property>
        <property name="bundleContext" ref="blueprintBundleContext"/>
    </bean>

    <bean id="tenantServiceImpl" class="org.apache.unomi.services.impl.tenants.TenantServiceImpl">
        <property name="persistenceService" ref="persistenceService"/>
        <property name="executionContextManager" ref="executionContextManagerImpl"/>
    </bean>

    <bean id="tenantMigrationServiceImpl" class="org.apache.unomi.services.impl.tenants.TenantMigrationService">
        <property name="persistenceService" ref="persistenceService"/>
        <property name="tenantService" ref="tenantServiceImpl"/>
    </bean>

    <bean id="tenantMonitoringServiceImpl" class="org.apache.unomi.services.impl.tenants.TenantMonitoringService"
          init-method="activate">
        <property name="persistenceService" ref="persistenceService"/>
        <property name="definitionsService" ref="definitionsServiceImpl"/>
        <property name="tenantService" ref="tenantServiceImpl"/>
        <property name="contextManager" ref="executionContextManagerImpl"/>
    </bean>

    <bean id="tenantQuotaServiceImpl" class="org.apache.unomi.services.impl.tenants.TenantQuotaService"
          init-method="activate">
        <property name="persistenceService" ref="persistenceService"/>
        <property name="tenantService" ref="tenantServiceImpl"/>
        <property name="contextManager" ref="executionContextManagerImpl"/>
    </bean>

    <!-- Value Type Validator Beans -->
    <bean id="stringValueTypeValidator" class="org.apache.unomi.services.impl.validation.validators.StringValueTypeValidator"/>
    <bean id="integerValueTypeValidator" class="org.apache.unomi.services.impl.validation.validators.IntegerValueTypeValidator"/>
    <bean id="longValueTypeValidator" class="org.apache.unomi.services.impl.validation.validators.LongValueTypeValidator"/>
    <bean id="floatValueTypeValidator" class="org.apache.unomi.services.impl.validation.validators.FloatValueTypeValidator"/>
    <bean id="doubleValueTypeValidator" class="org.apache.unomi.services.impl.validation.validators.DoubleValueTypeValidator"/>
    <bean id="booleanValueTypeValidator" class="org.apache.unomi.services.impl.validation.validators.BooleanValueTypeValidator"/>
    <bean id="dateValueTypeValidator" class="org.apache.unomi.services.impl.validation.validators.DateValueTypeValidator"/>
    <bean id="comparisonOperatorValueTypeValidator" class="org.apache.unomi.services.impl.validation.validators.ComparisonOperatorValueTypeValidator"/>
    <bean id="conditionValueTypeValidator" class="org.apache.unomi.services.impl.validation.validators.ConditionValueTypeValidator"/>

    <!-- Condition Validation Service -->
    <bean id="conditionValidationService" class="org.apache.unomi.services.impl.validation.ConditionValidationServiceImpl">
        <property name="builtInValidators">
            <list>
                <ref component-id="stringValueTypeValidator"/>
                <ref component-id="integerValueTypeValidator"/>
                <ref component-id="longValueTypeValidator"/>
                <ref component-id="floatValueTypeValidator"/>
                <ref component-id="doubleValueTypeValidator"/>
                <ref component-id="booleanValueTypeValidator"/>
                <ref component-id="dateValueTypeValidator"/>
                <ref component-id="comparisonOperatorValueTypeValidator"/>
                <ref component-id="conditionValueTypeValidator"/>
            </list>
        </property>
    </bean>

    <!-- Services -->
    <service id="multiTypeCacheService" ref="multiTypeCacheServiceImpl" interface="org.apache.unomi.api.services.cache.MultiTypeCacheService" />

    <service id="executionContextManager" ref="executionContextManagerImpl" interface="org.apache.unomi.api.services.ExecutionContextManager"/>

    <service id="schedulerService" ref="schedulerServiceImpl">
        <interfaces>
            <value>org.apache.unomi.api.services.SchedulerService</value>
        </interfaces>
    </service>

    <service id="definitionsService" ref="definitionsServiceImpl">
        <interfaces>
            <value>org.apache.unomi.api.services.DefinitionsService</value>
            <value>org.osgi.framework.SynchronousBundleListener</value>
            <value>org.apache.unomi.api.services.TenantLifecycleListener</value>
        </interfaces>
    </service>

    <service id="eventService" ref="eventServiceImpl" interface="org.apache.unomi.api.services.EventService"/>

    <service id="goalsService" ref="goalsServiceImpl">
        <interfaces>
            <value>org.apache.unomi.api.services.GoalsService</value>
            <value>org.osgi.framework.SynchronousBundleListener</value>
        </interfaces>
    </service>

    <service id="scopeService" ref="scopeServiceImpl" interface="org.apache.unomi.api.services.ScopeService"/>

    <service id="actionExecutorDispatcher" ref="actionExecutorDispatcherImpl">
        <interfaces>
            <value>org.apache.unomi.services.actions.ActionExecutorDispatcher</value>
        </interfaces>
    </service>

    <service id="rulesService" ref="rulesServiceImpl">
        <interfaces>
            <value>org.apache.unomi.api.services.RulesService</value>
            <value>org.apache.unomi.api.services.EventListenerService</value>
            <value>org.osgi.framework.SynchronousBundleListener</value>
        </interfaces>
    </service>

    <service id="segmentService" ref="segmentServiceImpl">
        <interfaces>
            <value>org.apache.unomi.api.services.SegmentService</value>
            <value>org.osgi.framework.SynchronousBundleListener</value>
        </interfaces>
    </service>

    <service id="userListService" ref="userListServiceImpl">
        <interfaces>
            <value>org.osgi.framework.SynchronousBundleListener</value>
            <value>org.apache.unomi.api.services.UserListService</value>
        </interfaces>
    </service>

    <service id="profileService" ref="profileServiceImpl">
        <interfaces>
            <value>org.apache.unomi.api.services.ProfileService</value>
            <value>org.osgi.framework.SynchronousBundleListener</value>
        </interfaces>
    </service>

    <service id="queryService" ref="queryServiceImpl" interface="org.apache.unomi.api.services.QueryService"/>

    <service id="personalizationService" ref="personalizationServiceImpl"
             interface="org.apache.unomi.api.services.PersonalizationService"/>

    <service id="patchService" ref="patchServiceImpl">
        <interfaces>
            <value>org.apache.unomi.api.services.PatchService</value>
        </interfaces>
    </service>

    <service id="topicService" ref="topicServiceImpl">
        <interfaces>
            <value>org.apache.unomi.api.services.TopicService</value>
            <value>org.osgi.framework.SynchronousBundleListener</value>
        </interfaces>
    </service>

    <service id="configSharingService" ref="configSharingServiceImpl">
        <interfaces>
            <value>org.osgi.framework.SynchronousBundleListener</value>
            <value>org.apache.unomi.api.services.ConfigSharingService</value>
        </interfaces>
    </service>

    <service id="tenantService" ref="tenantServiceImpl" interface="org.apache.unomi.api.tenants.TenantService">
        <service-properties>
            <entry key="service.exported.interfaces" value="org.apache.unomi.api.tenants.TenantService"/>
        </service-properties>
    </service>

    <service id="auditService" ref="auditServiceImpl" interface="org.apache.unomi.api.tenants.AuditService">
        <service-properties>
            <entry key="service.exported.interfaces" value="org.apache.unomi.api.tenants.AuditService"/>
        </service-properties>
    </service>

    <service id="tenantMigrationService" ref="tenantMigrationServiceImpl"
             interface="org.apache.unomi.services.impl.tenants.TenantMigrationService">
        <service-properties>
            <entry key="service.exported.interfaces" value="org.apache.unomi.services.impl.tenants.TenantMigrationService"/>
        </service-properties>
    </service>

    <service id="tenantMonitoringService" ref="tenantMonitoringServiceImpl"
             interface="org.apache.unomi.services.impl.tenants.TenantMonitoringService">
        <service-properties>
            <entry key="service.exported.interfaces" value="org.apache.unomi.services.impl.tenants.TenantMonitoringService"/>
        </service-properties>
    </service>

    <service id="tenantQuotaService" ref="tenantQuotaServiceImpl"
             interface="org.apache.unomi.services.impl.tenants.TenantQuotaService">
        <service-properties>
            <entry key="service.exported.interfaces" value="org.apache.unomi.services.impl.tenants.TenantQuotaService"/>
        </service-properties>
    </service>

    <service id="securityService" ref="securityServiceImpl" interface="org.apache.unomi.api.security.SecurityService">
        <service-properties>
            <entry key="service.exported.interfaces" value="org.apache.unomi.api.security.SecurityService"/>
        </service-properties>
    </service>

    <!-- Value Type Validator Services -->
    <service ref="stringValueTypeValidator" interface="org.apache.unomi.api.services.ValueTypeValidator"/>
    <service ref="integerValueTypeValidator" interface="org.apache.unomi.api.services.ValueTypeValidator"/>
    <service ref="longValueTypeValidator" interface="org.apache.unomi.api.services.ValueTypeValidator"/>
    <service ref="floatValueTypeValidator" interface="org.apache.unomi.api.services.ValueTypeValidator"/>
    <service ref="doubleValueTypeValidator" interface="org.apache.unomi.api.services.ValueTypeValidator"/>
    <service ref="booleanValueTypeValidator" interface="org.apache.unomi.api.services.ValueTypeValidator"/>
    <service ref="dateValueTypeValidator" interface="org.apache.unomi.api.services.ValueTypeValidator"/>
    <service ref="comparisonOperatorValueTypeValidator" interface="org.apache.unomi.api.services.ValueTypeValidator"/>
    <service ref="conditionValueTypeValidator" interface="org.apache.unomi.api.services.ValueTypeValidator"/>

    <!-- Condition Validation Service -->
    <service id="conditionValidationServiceInterface" ref="conditionValidationService" interface="org.apache.unomi.api.services.ConditionValidationService"/>

</blueprint>
